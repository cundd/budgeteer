use std::collections::HashMap;
use chrono::{Date, NaiveDate};

pub fn get_exchange_rate(date: NaiveDate) -> Option<f32> {
    get_exchange_rates().get(date.format("%Y-%m-%d").to_string().as_str()).cloned()
}

pub fn get_exchange_rates() -> HashMap<&'static str, f32> {
    let mut map = HashMap::new();
    map.insert("2019-01-02", 1.1239);
    map.insert("2019-01-03", 1.1219);
    map.insert("2019-01-04", 1.1256);
    map.insert("2019-01-07", 1.1227);
    map.insert("2019-01-08", 1.1232);
    map.insert("2019-01-09", 1.1230);
    map.insert("2019-01-10", 1.1276);
    map.insert("2019-01-11", 1.1327);
    map.insert("2019-01-14", 1.1258);
    map.insert("2019-01-15", 1.1266);
    map.insert("2019-01-16", 1.1269);
    map.insert("2019-01-17", 1.1312);
    map.insert("2019-01-18", 1.1331);
    map.insert("2019-01-21", 1.1343);
    map.insert("2019-01-22", 1.1326);
    map.insert("2019-01-23", 1.1335);
    map.insert("2019-01-24", 1.1283);
    map.insert("2019-01-25", 1.1310);
    map.insert("2019-01-28", 1.1331);
    map.insert("2019-01-29", 1.1352);
    map.insert("2019-01-30", 1.1403);
    map.insert("2019-01-31", 1.1409);
    map.insert("2019-02-01", 1.1396);
    map.insert("2019-02-04", 1.1421);
    map.insert("2019-02-05", 1.1436);
    map.insert("2019-02-06", 1.1394);
    map.insert("2019-02-07", 1.1357);
    map.insert("2019-02-08", 1.1357);
    map.insert("2019-02-11", 1.1351);
    map.insert("2019-02-12", 1.1381);
    map.insert("2019-02-13", 1.1371);
    map.insert("2019-02-14", 1.1370);
    map.insert("2019-02-15", 1.1340);
    map.insert("2019-02-18", 1.1361);
    map.insert("2019-02-19", 1.1351);
    map.insert("2019-02-20", 1.1342);
    map.insert("2019-02-21", 1.1367);
    map.insert("2019-02-22", 1.1346);
    map.insert("2019-02-25", 1.1351);
    map.insert("2019-02-26", 1.1371);
    map.insert("2019-02-27", 1.1354);
    map.insert("2019-02-28", 1.1335);
    map.insert("2019-03-01", 1.1363);
    map.insert("2019-03-04", 1.1352);
    map.insert("2019-03-05", 1.1341);
    map.insert("2019-03-06", 1.1360);
    map.insert("2019-03-07", 1.1355);
    map.insert("2019-03-08", 1.1324);
    map.insert("2019-03-11", 1.1349);
    map.insert("2019-03-12", 1.1369);
    map.insert("2019-03-13", 1.1373);
    map.insert("2019-03-14", 1.1351);
    map.insert("2019-03-15", 1.1360);
    map.insert("2019-03-18", 1.1360);
    map.insert("2019-03-19", 1.1353);
    map.insert("2019-03-20", 1.1338);
    map.insert("2019-03-21", 1.1309);
    map.insert("2019-03-22", 1.1243);
    map.insert("2019-03-25", 1.1237);
    map.insert("2019-03-26", 1.1222);
    map.insert("2019-03-27", 1.1196);
    map.insert("2019-03-28", 1.1185);
    map.insert("2019-03-29", 1.1181);
    map.insert("2019-04-01", 1.1180);
    map.insert("2019-04-02", 1.1195);
    map.insert("2019-04-03", 1.1206);
    map.insert("2019-04-04", 1.1207);
    map.insert("2019-04-05", 1.1235);
    map.insert("2019-04-08", 1.1245);
    map.insert("2019-04-09", 1.1270);
    map.insert("2019-04-10", 1.1280);
    map.insert("2019-04-11", 1.1304);
    map.insert("2019-04-12", 1.1326);
    map.insert("2019-04-15", 1.1345);
    map.insert("2019-04-16", 1.1371);
    map.insert("2019-04-17", 1.1400);
    map.insert("2019-04-18", 1.1383);
    map.insert("2019-04-23", 1.1470);
    map.insert("2019-04-24", 1.1416);
    map.insert("2019-04-25", 1.1368);
    map.insert("2019-04-26", 1.1372);
    map.insert("2019-04-29", 1.1379);
    map.insert("2019-04-30", 1.1437);
    map.insert("2019-05-02", 1.1419);
    map.insert("2019-05-03", 1.1383);
    map.insert("2019-05-06", 1.1403);
    map.insert("2019-05-07", 1.1415);
    map.insert("2019-05-08", 1.1407);
    map.insert("2019-05-09", 1.1390);
    map.insert("2019-05-10", 1.1378);
    map.insert("2019-05-13", 1.1319);
    map.insert("2019-05-14", 1.1307);
    map.insert("2019-05-15", 1.1276);
    map.insert("2019-05-16", 1.1306);
    map.insert("2019-05-17", 1.1283);
    map.insert("2019-05-20", 1.1263);
    map.insert("2019-05-21", 1.1274);
    map.insert("2019-05-22", 1.1252);
    map.insert("2019-05-23", 1.1224);
    map.insert("2019-05-24", 1.1215);
    map.insert("2019-05-27", 1.1257);
    map.insert("2019-05-28", 1.1254);
    map.insert("2019-05-29", 1.1217);
    map.insert("2019-05-30", 1.1228);
    map.insert("2019-05-31", 1.1214);
    map.insert("2019-06-03", 1.1162);
    map.insert("2019-06-04", 1.1178);
    map.insert("2019-06-05", 1.1163);
    map.insert("2019-06-06", 1.1174);
    map.insert("2019-06-07", 1.1191);
    map.insert("2019-06-10", 1.1200);
    map.insert("2019-06-11", 1.1233);
    map.insert("2019-06-12", 1.1252);
    map.insert("2019-06-13", 1.1207);
    map.insert("2019-06-14", 1.1211);
    map.insert("2019-06-17", 1.1214);
    map.insert("2019-06-18", 1.1175);
    map.insert("2019-06-19", 1.1176);
    map.insert("2019-06-20", 1.1142);
    map.insert("2019-06-21", 1.1107);

    map
}